////////////////////////////////////////////////////////////////////////////////
//////////////////// SHORTINGS /////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

C=console;W=window;WIH=W.innerHeight;WIW=W.innerWidth;WOH=W.outerHeight;
WOW=W.outerWidth;WS=W.scroll;CK=D.cookie;L=D.location;H=W.history;B=D.body;
BSH=B.scrollHeight;BST=B.scrollTop;

 qs = (s,c) => {
  return (c||D).querySelector(s);
}
qsa=(s,c)=>{(c||D).querySelectorAll(s)};


p={ac:'align-content',ai:'align-items',as:'align-items',cc:'column-count',jc:'justify-content',m:'margin',p:'padding',ta:'text-align'}
v={a:'auto',a0:'auto0',abs:'absolute',bl:'baseline',c:'center',fix:'fixed',fe:'flex-end',fs:'flex-start',n:'none',rel:'relative',sa:'space-around',sb:'space-between',st:'sticky'}

const r=[...new Set(Array.from(qsa('[class*="-"]'))
  .flatMap(el=>Array.from(el.classList).filter(c => c.includes('-'))))]

console.log(r)


  r.forEach(c=>{
    console.log('c: '+c);
    var spl  = c.split('-');
    var prop = spl[0]; prop = p[prop];
    var val  = spl[1]; val  = v[val];
    qsa('.'+c).forEach(z=>{z.style[prop] = val;});
    console.log('prop: '+prop);
    console.log('val: '+val);
  });



  ////////////////////////////////////////////////////////////////////////////////
  //////////////////// THE LIBRARY ///////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////

  function cc(selector){

  //////////////////// ??? ///////////////////////////////////////////////////////

    let is   = (a,b) => {
      return typeof a==b;
    }
    let isA  = (a)   => {

    }
    let isN  = (a)   => {
      return a&&a['nodeType'];
    }
    let isNL = (a)   => {
      return NodeList.prototype.isPrototypeOf(a)
    }
    let isO  = (a)   => {
      return !!a&&is(a,'object');
    }
    let isS  = (a)   => {
      return is(a,'string');
    }
    let isV  = (a)   => {
      var t=typeof a; return t=='object' ? !!(a&&a['getDay']):(t=='string'||t=='number'||isB(a));
    }

  //////////////////// THE CHAIN /////////////////////////////////////////////////

    const x = {

      ///// SELECTOR
      element: qsa(s),

      ///// BASIC METHODS
      _: (a)     => {

      if(strB(a,'data-')){

      z = isNL(x) ? x[0] : x ;

      if (!("params" in z.dataset)){
      x = z.closest('*['+a+']');
      }
      return x.getAttribute(a);

      } else {

      x = [x[0].closest(a)];
      return x;
      }

      },
      c: (a,b)   => {

      b ?

      let z = x[0].classList;
      z.contains(a) ? (m=a,n=b)
      : (m=b,n=a)
      ; (z.remove(m),z.add(n))

      :
      strB(a,'!') ? isNL(x) ? x.forEach(y=>{y.classList.remove(a.slice(1));})
              :               x.classList.remove(a.slice(1))
      : isNL(x) ? x.forEach(y=>{y.classList.add(a);})
              :               x.classList.add(a)
      ; return x},


    }

    return x

  }
